package org.eja.sisolf.entity;
// Generated 01-mar-2015 3:16:22 by Hibernate Tools 4.3.1

import java.util.Objects;
import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;

/**
 * ClienteAgente generated by hbm2java
 */
@Entity
@Table(name = "cliente_agente", catalog = "sisolf"
)
public class ClienteAgente implements java.io.Serializable {

    private Agente agente;
    private Cliente cliente;
    private float puntos;

    public ClienteAgente() {
    }

    public ClienteAgente(Agente agente, Cliente cliente, float puntos) {
        this.agente = agente;
        this.cliente = cliente;
        this.puntos = puntos;
    }

    @Id
    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "AgenteID", nullable = false, insertable = false, updatable = false)
    public Agente getAgente() {
        return this.agente;
    }

    public void setAgente(Agente agente) {
        this.agente = agente;
    }

    @Id
    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "ClienteID", nullable = false, insertable = false, updatable = false)
    public Cliente getCliente() {
        return this.cliente;
    }

    public void setCliente(Cliente cliente) {
        this.cliente = cliente;
    }

    @Column(name = "Puntos", nullable = false, precision = 6, scale = 4)
    public float getPuntos() {
        return this.puntos;
    }

    public void setPuntos(float puntos) {
        this.puntos = puntos;
    }

    @Override
    public int hashCode() {
        int hash = 5;
        hash = 59 * hash + Objects.hashCode(this.agente);
        hash = 59 * hash + Objects.hashCode(this.cliente);
        hash = 59 * hash + Float.floatToIntBits(this.puntos);
        return hash;
    }

    @Override
    public boolean equals(Object obj) {
        if (obj == null) {
            return false;
        }
        if (getClass() != obj.getClass()) {
            return false;
        }
        final ClienteAgente other = (ClienteAgente) obj;
        if (!Objects.equals(this.agente, other.agente)) {
            return false;
        }
        if (!Objects.equals(this.cliente, other.cliente)) {
            return false;
        }
        if (Float.floatToIntBits(this.puntos) != Float.floatToIntBits(other.puntos)) {
            return false;
        }
        return true;
    }
    
    

}
