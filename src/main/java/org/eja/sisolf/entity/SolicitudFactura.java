package org.eja.sisolf.entity;
// Generated 01-mar-2015 3:16:22 by Hibernate Tools 4.3.1

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * SolicitudFactura generated by hbm2java
 */
@Entity
@Table(name = "solicitud_factura", catalog = "sisolf"
)
public class SolicitudFactura implements java.io.Serializable {

    private Integer solicitudFacturaId;
    private Cliente cliente;
    private Direccion direccion;
    private Empresa empresa;
    private EstadoSolicitudFactura estadoSolicitudFactura;
    private Usuario usuario;
    private Date fechaSolicitud;
    private float subtotal;
    private float iva;
    private float impuestos;
    private float total;
    private float retorno;
    private String razonSocial;
    private String rfc;
    private Set<ArchivoFactura> archivoFacturas = new HashSet<ArchivoFactura>(0);
    private Set<DireccionRetorno> direccionRetornos = new HashSet<DireccionRetorno>(0);
    private Set<ConceptoFactura> conceptoFacturas = new HashSet<ConceptoFactura>(0);
    private Set<CuentaRetorno> cuentaRetornos = new HashSet<CuentaRetorno>(0);

    public SolicitudFactura() {
    }

    public SolicitudFactura(Cliente cliente, Direccion direccion, EstadoSolicitudFactura estadoSolicitudFactura, Date fechaSolicitud, float subtotal, float iva, float impuestos, float total, float retorno, String razonSocial, String rfc) {
        this.cliente = cliente;
        this.direccion = direccion;
        this.estadoSolicitudFactura = estadoSolicitudFactura;
        this.fechaSolicitud = fechaSolicitud;
        this.subtotal = subtotal;
        this.iva = iva;
        this.impuestos = impuestos;
        this.total = total;
        this.retorno = retorno;
        this.razonSocial = razonSocial;
        this.rfc = rfc;
    }

    public SolicitudFactura(Cliente cliente, Direccion direccion, Empresa empresa, EstadoSolicitudFactura estadoSolicitudFactura, Usuario usuario, Date fechaSolicitud, float subtotal, float iva, float impuestos, float total, float retorno, String razonSocial, String rfc, Set<ArchivoFactura> archivoFacturas, Set<DireccionRetorno> direccionRetornos, Set<ConceptoFactura> conceptoFacturas, Set<CuentaRetorno> cuentaRetornos) {
        this.cliente = cliente;
        this.direccion = direccion;
        this.empresa = empresa;
        this.estadoSolicitudFactura = estadoSolicitudFactura;
        this.usuario = usuario;
        this.fechaSolicitud = fechaSolicitud;
        this.subtotal = subtotal;
        this.iva = iva;
        this.impuestos = impuestos;
        this.total = total;
        this.retorno = retorno;
        this.razonSocial = razonSocial;
        this.rfc = rfc;
        this.archivoFacturas = archivoFacturas;
        this.direccionRetornos = direccionRetornos;
        this.conceptoFacturas = conceptoFacturas;
        this.cuentaRetornos = cuentaRetornos;
    }

    @Id
    @GeneratedValue(strategy = IDENTITY)

    @Column(name = "SolicitudFacturaID", unique = true, nullable = false)
    public Integer getSolicitudFacturaId() {
        return this.solicitudFacturaId;
    }

    public void setSolicitudFacturaId(Integer solicitudFacturaId) {
        this.solicitudFacturaId = solicitudFacturaId;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "ClienteID", nullable = false)
    public Cliente getCliente() {
        return this.cliente;
    }

    public void setCliente(Cliente cliente) {
        this.cliente = cliente;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "DireccionID", nullable = false)
    public Direccion getDireccion() {
        return this.direccion;
    }

    public void setDireccion(Direccion direccion) {
        this.direccion = direccion;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "EmpresaID")
    public Empresa getEmpresa() {
        return this.empresa;
    }

    public void setEmpresa(Empresa empresa) {
        this.empresa = empresa;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "EstadoID", nullable = false)
    public EstadoSolicitudFactura getEstadoSolicitudFactura() {
        return this.estadoSolicitudFactura;
    }

    public void setEstadoSolicitudFactura(EstadoSolicitudFactura estadoSolicitudFactura) {
        this.estadoSolicitudFactura = estadoSolicitudFactura;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "UsuarioID")
    public Usuario getUsuario() {
        return this.usuario;
    }

    public void setUsuario(Usuario usuario) {
        this.usuario = usuario;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name = "FechaSolicitud", nullable = false, length = 19)
    public Date getFechaSolicitud() {
        return this.fechaSolicitud;
    }

    public void setFechaSolicitud(Date fechaSolicitud) {
        this.fechaSolicitud = fechaSolicitud;
    }

    @Column(name = "Subtotal", nullable = false, precision = 15, scale = 3)
    public float getSubtotal() {
        return this.subtotal;
    }

    public void setSubtotal(float subtotal) {
        this.subtotal = subtotal;
    }

    @Column(name = "IVA", nullable = false, precision = 6, scale = 3)
    public float getIva() {
        return this.iva;
    }

    public void setIva(float iva) {
        this.iva = iva;
    }

    @Column(name = "Impuestos", nullable = false, precision = 15, scale = 3)
    public float getImpuestos() {
        return this.impuestos;
    }

    public void setImpuestos(float impuestos) {
        this.impuestos = impuestos;
    }

    @Column(name = "Total", nullable = false, precision = 15, scale = 3)
    public float getTotal() {
        return this.total;
    }

    public void setTotal(float total) {
        this.total = total;
    }

    @Column(name = "Retorno", nullable = false, precision = 15, scale = 3)
    public float getRetorno() {
        return this.retorno;
    }

    public void setRetorno(float retorno) {
        this.retorno = retorno;
    }

    @Column(name = "RazonSocial", nullable = false, length = 300)
    public String getRazonSocial() {
        return this.razonSocial;
    }

    public void setRazonSocial(String razonSocial) {
        this.razonSocial = razonSocial;
    }

    @Column(name = "RFC", nullable = false, length = 19)
    public String getRfc() {
        return this.rfc;
    }

    public void setRfc(String rfc) {
        this.rfc = rfc;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "solicitudFactura")
    public Set<ArchivoFactura> getArchivoFacturas() {
        return this.archivoFacturas;
    }

    public void setArchivoFacturas(Set<ArchivoFactura> archivoFacturas) {
        this.archivoFacturas = archivoFacturas;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "solicitudFactura")
    public Set<DireccionRetorno> getDireccionRetornos() {
        return this.direccionRetornos;
    }

    public void setDireccionRetornos(Set<DireccionRetorno> direccionRetornos) {
        this.direccionRetornos = direccionRetornos;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "solicitudFactura")
    public Set<ConceptoFactura> getConceptoFacturas() {
        return this.conceptoFacturas;
    }

    public void setConceptoFacturas(Set<ConceptoFactura> conceptoFacturas) {
        this.conceptoFacturas = conceptoFacturas;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "solicitudFactura")
    public Set<CuentaRetorno> getCuentaRetornos() {
        return this.cuentaRetornos;
    }

    public void setCuentaRetornos(Set<CuentaRetorno> cuentaRetornos) {
        this.cuentaRetornos = cuentaRetornos;
    }

}
